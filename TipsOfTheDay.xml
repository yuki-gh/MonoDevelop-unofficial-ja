<?xml version="1.0"?>
<TIPS>
        <TIP>monodevelop-list@lists.ximian.com 宛てに「本日のTip」をお寄せください。</TIP>
        <TIP>ソリューションを使うと、アプリケーションを構成するライブラリとアプリケーションのプロジェクトをひとまとめにして、相互に参照することが可能になります。</TIP>
        <TIP>パッドを自動で隠れるよう設定して、編集スペースを最大にしましょう。</TIP>
        <TIP>検索パッドをピン留めして、検索を続けても検索結果が失われないようにできます。</TIP>
        <TIP>「ファイル」→「ソリューション内のファイルを開く」で、ソリューション内のどのファイルにもすぐに飛ぶことができます。</TIP>
        <TIP>C#のoverrideキーワードはコード補完を有効化し、基底クラスのvirtual/abstractメンバと、クラスが実装するインターフェイス内のメンバの実装をスタブ化できます。</TIP>
        <TIP>コード補完ウィンドウが利用可能であれば、コードエディタ内のどこでも、Ctrl+Spaceで呼び出せます。</TIP>
        <TIP>コードナビゲーションとリファクタリングの操作は、コードエディタで変数・型・メンバを右クリックでアクセスできます。</TIP>
        <TIP>ASP.NETプロジェクトをビルドするとき、MonoDevelopはaspxページ内のコントロールを表現するフィールドを、それに対応するコードビハインドクラスに自動的に追加できます。</TIP>
        <TIP>エディタのタブをダブルクリックすると、すべてのパッドを隠して、編集スペースを最大にできます。元の状態に戻すには再度ダブルクリックします。</TIP>
        <TIP>プロジェクトで外部アセンブリを使う必要がある場合は、ソリューションパッドの参照フォルダで右クリックし、システムに登録されているアセンブリの一覧、現在のソリューション内のプロジェクトの一覧、ファイルシステムに存在するアセンブリから選んで参照を追加できます。</TIP>
        <TIP>gettextを用いた翻訳には、翻訳プロジェクトをソリューションに加えます。</TIP>
        <TIP>プロジェクトでファイルがどう扱われるか(ビルドに含まれるか、リソースとして埋め込まれるか、デプロイに含まれるか、無視されるがファイルリストには含まれるか)制御できます。
各ファイルについてこれらのオプションを変更するには、「表示」→「パッド」→「プロパティ」に行ってプロパティパッドを開き、プロジェクトファイルリストから欲しいファイルを選びます。そしてプロパティタブの「ビルド」→「ビルドアクション」を変更してファイルの扱いを選びます。</TIP>
        <TIP>GTK#でフォームをデザインするのは、ウィジェットをネストしたコンテナへ圧縮することを含みます。ウィジェットのサイズと位置は、フォームとウィジェットのサイズによって自動で計算されます。</TIP>
        <TIP>シンプルなコードテンプレートを呼び出すには、'scwl'などのテンプレートのコードを入力し、Tabキーを押します。テンプレートの追加・編集はテキストエディタの設定で可能です。</TIP>
        <TIP>対象のランタイム(1.1、2.0、Silverlight 1.1など)を変更するには、ソリューションタブ内のプロジェクト名で右クリックし、「オプション」を選び、「ビルド」→「全般」に行きます。</TIP>
        <TIP>プロジェクトのファイル一覧を更新するには、プロジェクト名で右クリックし、「最新の状態に更新」を選びます。バージョン管理アドインを使っていて、外部でファイルを更新・コミットし、その更新された状態をMonoDevelopの中に反映する必要がある場合に非常に有用です。</TIP>
        <TIP>プロジェクトがバージョン管理下なら、各ファイルへのメッセージの入力にStatus/Commitビューを使えます。これはコミットメッセージやコミット前に編集可能なChangeLogエントリを作成するのに使えます。</TIP>
        <TIP>ASP.NETプロジェクトの参照を編集すると、自動的にweb.configファイルを更新します。</TIP>
        <TIP>sshfs FUSEファイルシステムをインストールしていれば、Webデプロイダイアログを使って、ASP.NETプロジェクトをSSH越しにリモートサーバにデプロイできます。</TIP>
        <TIP>プロパティパッドは多くのものにコンテキストプロパティを提供します。GUIデザイナーでウィジェットを編集するだけでなく、ソリューションパッド内のファイルのデプロイ/ビルドモードや、リソースのリソースID、ファイルがビルドされるかデプロイされるかを設定するのに使えます。</TIP>
        <TIP>MonoDevelopはVisual Studio 2005/2008のほとんどのソリューション/プロジェクトファイルを直接開いて保存できますが、MonoDevelopやVisual Studioのすべての機能はサポートされません。</TIP>
        <TIP>コマンドラインプログラムmdtoolで、MonoDevelopソリューションのビルド、Makefileの生成、その他が可能です。</TIP>
        <TIP>Makefile統合によって、ファイルの一覧やMakefile内の変数の参照を同期し、Makefileターゲットを呼び出してビルドを行うことが可能です。</TIP>
        <TIP>MonoDevelopのオンライン アドイン レポジトリから、新機能を提供する追加のアドインが利用可能です。インストールするには、「ツール」→「アドイン」に行き「アドインをインストール」をクリックします。</TIP>
        <TIP>///で始まるXML文書コメントを追加すると、ツールチップとコード補完で表示されます。</TIP>
        <TIP>プロパティパッドのシグナルタブを使ってGTK# GUIデザイナーにイベントハンドラを追加する際、MonoDevelopはメソッドのスタブを追加します。</TIP>
        <TIP>C#のコンパイラオプションで、#defineマクロはコンマで区切ります。例 VERBOSE,MONO,ETC</TIP>
        <TIP>コードに //TODO: やその他のタスクコメントがあると、タスクリストに現れます。//THINK: や //RESEARCH: など自由にカスタマイズ可能です。</TIP>
        <TIP>Gtk#では、Gtk.Binを継承するウィジェットを作ると、デザイナーのツールボックスに現れ、再利用が容易です。</TIP>
        <TIP>Subversion統合はソース管理をとても簡単にします。嘘だと思ったら、ChangeLog統合を調べてみましょう。</TIP>
        <TIP>Type not foundというコンパイルエラーが出る場合は、SystemやSystem.Xmlのような一般的なアセンブリの参照が欠けていることがあります。
ソリューションパッドの参照フォルダで右クリックし、「参照アセンブリを編集」を選んで、プロジェクトが参照しているアセンブリを編集します。</TIP>
        <TIP>起動を速くするには、アドイン マネージャーを使って不要なアドインを無効化します。</TIP>
        <TIP>配布用に他のプロジェクトの出力をパッケージ化するには、パッケージ化するプロジェクトをソリューションに追加します。</TIP>
        <TIP>ソースエディタでフィールド上で右クリックすると、プロパティとして自動的にカプセル化することができます。</TIP>
        <TIP>コードの識別子に対する「名前の変更」コンテキストメニューコマンドは、自動的にすべての参照を見つけて修正します。</TIP>
        <TIP>C#のスマートインデントが有効な場合、Tabキーは現在の行を再インデントします。</TIP>
        <TIP>Windowsのような他のプラットフォームで使われる可能性のあるアプリケーションを書く際は、パスの区切りとファイル名の大文字小文字の違いに注意しましょう。クロスプラットフォーム開発の詳細なガイドラインは http://www.mono-project.com/Guidelines:Application_Portability にあります。</TIP>
</TIPS>
